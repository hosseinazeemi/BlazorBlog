@inject LazyAssemblyLoader lazyLoader
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using System.Reflection

<Router AppAssembly="@typeof(Program).Assembly" OnNavigateAsync="OnNavigateAsync"
        AdditionalAssemblies="lazyLoadedAssemblies">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <Authorizing>
                <text>Custom authorizing...</text>
            </Authorizing>
            <NotAuthorized>
                <text>دسترسی شما در این صفحه محدود است</text>
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="@typeof(MainLayout)">
            <p>پیدا نشد</p>
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>

@code { private List<Assembly> lazyLoadedAssemblies = new List<Assembly>();

            private async Task OnNavigateAsync(NavigationContext args)
            {
                if (args.Path.EndsWith("counter"))
                {
                    var assemblies = await lazyLoader.LoadAssembliesAsync(
                        new List<string> { "MathNet.Numerics.dll" });
                    lazyLoadedAssemblies.AddRange(assemblies);
                }
            } }