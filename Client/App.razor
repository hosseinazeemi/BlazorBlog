@inject LazyAssemblyLoader lazyLoader
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using System.Reflection


<Router AppAssembly="@typeof(Program).Assembly" OnNavigateAsync="OnNavigateAsync"
        AdditionalAssemblies="lazyLoadedAssemblies">

    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <Authorizing>
                <div class="authorize-holder">
                    <p class="text-danger text-center font-large">در حال اعتبار سنجی</p>
                </div>
            </Authorizing>
            <NotAuthorized>
                <div class="authorize-holder">
                    <p class="text-danger text-center font-large">شما به این صفحه دسترسی ندارید</p>
                </div>
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="authorize-holder">
                    <p class="text-danger text-center font-large">صفحه مورد نظر یافت نشد</p>
                    <a href="/" class="text-center text-primary font-medium">برگشت به سایت</a>
                </div>
            </LayoutView>
        </CascadingAuthenticationState>

    </NotFound>
</Router>



@code { private List<Assembly> lazyLoadedAssemblies = new List<Assembly>();

    private async Task OnNavigateAsync(NavigationContext args)
    {
        if (args.Path.EndsWith("counter"))
        {
            var assemblies = await lazyLoader.LoadAssembliesAsync(
                new List<string> { "MathNet.Numerics.dll" });
            lazyLoadedAssemblies.AddRange(assemblies);
        }
    } }